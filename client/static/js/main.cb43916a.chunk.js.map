{"version":3,"sources":["compenents/navbar.component.js","compenents/blog.component.js","compenents/blogList.component.js","compenents/myBlog.component.js","compenents/login.component.js","App.js","serviceWorker.js","index.js","blog.png"],"names":["NavbarComponent","props","toggle","bind","logout","dropdownToggle","state","isOpen","navCollapsed","showNavbar","user","isDropdownOpen","this","setState","console","log","axios","get","then","res","data","catch","err","response","updateUser","window","location","Navbar","color","dark","expand","to","className","style","fontFamily","fontWeight","src","logo","maxWidth","alt","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","ButtonDropdown","Button","id","icon","faUser","username","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","faSignOutAlt","Component","blog","toggleModal","onbodyChange","ontitleChange","onimgChange","onSubmit","deleteBlog","imageURL","title","body","author","likes","isModalOpen","loaded","image","date","match","params","e","target","value","preventDefault","imageFile","alert","length","formData","FormData","put","delete","size","href","width","height","borderRadius","faArrowLeft","Card","CardImg","top","CardBody","CardTitle","CardSubtitle","faCalendar","Intl","DateTimeFormat","month","day","year","hour","minute","format","Date","parse","faHeart","CardText","CardFooter","_id","display","type","Modal","fade","ModalHeader","Form","ModalBody","FormGroup","Label","htmlFor","Input","onChange","name","onFileChange","ModalFooter","Blog","liked","toggleLike","key","CardImgOverlay","cursor","substring","pathname","Blogs","blogs","setUser","map","blogList","sort","a","b","post","marginLeft","marginTop","like","showLikes","faUserCircle","Myblogs","forEach","login","onChangePassword","onChangeUsername","onChangeEmail","toggleError","addUser","password","email","errMessage","alertCol","errMess","undefined","newUser","Alert","required","App","wrapper","createRef","node","current","path","exact","render","component","Boolean","hostname","ReactDOM","Fragment","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.cb43916a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Navbar,\r\n    NavItem,\r\n    Collapse,\r\n    Nav,\r\n    NavbarToggler,\r\n    ButtonDropdown,\r\n    Button,\r\n    DropdownItem,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n} from \"reactstrap\";\r\nimport logo from \"../blog.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUser, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nexport default class NavbarComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggle = this.toggle.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.dropdownToggle = this.dropdownToggle.bind(this);\r\n\r\n        this.state = {\r\n            isOpen: false,\r\n            navCollapsed: true,\r\n            showNavbar: false,\r\n            user: null,\r\n            isDropdownOpen: false,\r\n        };\r\n    }\r\n    dropdownToggle() {\r\n        this.setState({\r\n            isDropdownOpen: !this.state.isDropdownOpen,\r\n        });\r\n    }\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen,\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n\r\n        axios\r\n            .get(\"/api/users/current\")\r\n            .then((res) => this.setState({ user: res.data.user }))\r\n            .catch((err) => console.log(err.response));\r\n    }\r\n    logout() {\r\n        axios\r\n            .get(\"/api/users/logout\")\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                this.props.updateUser(null);\r\n                this.setState({\r\n                    user: null,\r\n                });\r\n            })\r\n            .catch((err) => console.log(err.response));\r\n        window.location = \"/login\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Navbar color='dark' dark expand='lg'>\r\n                <Link\r\n                    to='/'\r\n                    className='navbar-brand'\r\n                    style={{ fontFamily: \"Monoton\", fontWeight: \"100\" }}>\r\n                    <img\r\n                        src={logo}\r\n                        style={{ maxWidth: \"40px\" }}\r\n                        className='mx-2'\r\n                        alt=\"logo\"\r\n                    />\r\n                    BlogApp\r\n                </Link>\r\n                <NavbarToggler onClick={this.toggle} />{\" \"}\r\n                <Collapse isOpen={this.state.isOpen} navbar>\r\n                    {this.state.user ? (\r\n                        <Nav className='ml-auto mr-2' navbar>\r\n                            <NavItem className='navbar-item'>\r\n                                <ButtonDropdown\r\n                                    isOpen={this.state.isDropdownOpen}\r\n                                    toggle={this.dropdownToggle}>\r\n                                    <Button id='caret' color='primary'>\r\n                                        <FontAwesomeIcon\r\n                                            icon={faUser}\r\n                                            className='mr-2'\r\n                                        />\r\n                                        {this.state.user.username}\r\n                                    </Button>\r\n                                    <DropdownToggle caret color='primary' />\r\n                                    <DropdownMenu right>\r\n                                        <Link\r\n                                            to='/myblogs/'\r\n                                            className='dropdown-item'>\r\n                                            My Blogs\r\n                                        </Link>\r\n\r\n                                        <DropdownItem divider />\r\n                                        <DropdownItem onClick={this.logout}>\r\n                                            logout\r\n                                            <FontAwesomeIcon\r\n                                                icon={faSignOutAlt}\r\n                                                className='ml-3'\r\n                                            />\r\n                                        </DropdownItem>\r\n                                    </DropdownMenu>\r\n                                </ButtonDropdown>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    ) : (\r\n                        <Nav className='ml-auto' navbar>\r\n                            <NavItem className='navbar-item'>\r\n                                <Link className='nav-link' to='/login'>\r\n                                    Login\r\n                                </Link>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    )}\r\n                </Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Card,\r\n    CardImg,\r\n    CardBody,\r\n    CardSubtitle,\r\n    CardTitle,\r\n    CardText,\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    CardFooter,\r\n} from \"reactstrap\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faCalendar,\r\n    faHeart,\r\n    faArrowLeft,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nexport default class blog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.onbodyChange = this.onbodyChange.bind(this);\r\n        this.ontitleChange = this.ontitleChange.bind(this);\r\n        this.onimgChange = this.onimgChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.deleteBlog = this.deleteBlog.bind(this);\r\n        this.state = {\r\n            imageURL: \"\",\r\n            title: \"\",\r\n            body: \"\",\r\n            author: \"\",\r\n            data: \"\",\r\n            likes: [],\r\n            isModalOpen: false,\r\n            loaded: false,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        // console.log(this.props.location);\r\n        if (this.props.location.blog) {\r\n            this.setState({\r\n                imageURL: this.props.location.blog.blog.image,\r\n                title: this.props.location.blog.blog.title,\r\n                body: this.props.location.blog.blog.body,\r\n                author: this.props.location.blog.blog.author,\r\n                date: this.props.location.blog.blog.date,\r\n                likes: this.props.location.blog.blog.likes,\r\n                loaded: true,\r\n            });\r\n        }\r\n        if (!this.props.location.blog) {\r\n            axios\r\n                .get(`/api/blogs/${this.props.match.params.id}`)\r\n                .then(({ data }) => {\r\n                    this.setState({\r\n                        imageURL: data.image,\r\n                        title: data.title,\r\n                        body: data.body,\r\n                        author: data.author,\r\n                        date: data.date,\r\n                        likes: data.likes,\r\n                        loaded: true,\r\n                    });\r\n                })\r\n                .catch((err) => console.log({ err: err }));\r\n        }\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n        });\r\n    }\r\n    ontitleChange(e) {\r\n        this.setState({\r\n            title: e.target.value,\r\n        });\r\n    }\r\n    onbodyChange(e) {\r\n        this.setState({\r\n            body: e.target.value,\r\n        });\r\n    }\r\n    onimgChange(e) {\r\n        this.setState({\r\n            imageURL: e.target.value,\r\n        });\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const imageFile = this.state.imageURL;\r\n \r\n        if (!imageFile) {\r\n            alert('Please select image.');\r\n            return false;\r\n        }\r\n    \r\n        if (!imageFile.match(/\\.(jpg|jpeg|png)$/)) {\r\n            alert('Please select valid image.');\r\n            return false;\r\n        }\r\n\r\n        const title = this.state.title;\r\n        if(title.length == 0){\r\n            alert(\"Please input title\");\r\n            return false;\r\n        }\r\n\r\n        const body = this.state.body;\r\n        if(body.length == 0){\r\n            alert(\"Plaese input Body\");\r\n            return false;\r\n        }\r\n        \r\n        const formData = new FormData(e.target);\r\n        axios\r\n            .put(`/api/blogs/${this.props.match.params.id}`, formData)\r\n            .then(({ data: { blog } }) => {\r\n                this.setState({\r\n                    title: blog.title,\r\n                    imageURL: blog.image,\r\n                    body: blog.body,\r\n                    date: blog.date,\r\n                });\r\n                console.log(blog);\r\n            })\r\n            .catch((err) => console.log(err));\r\n\r\n        this.toggleModal();\r\n    }\r\n    deleteBlog() {\r\n        axios\r\n            .delete(`/api/blogs/${this.props.match.params.id}`)\r\n            .then(({ data }) => {\r\n                console.log(data);\r\n                window.location = \"/\";\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='pt-2 px-3'>\r\n                <div className='row mr-auto ml-0 mb-4 mt-0'>\r\n                    <Button\r\n                        color='primary'\r\n                        size='lg'\r\n                        onClick={() => {\r\n                            window.location.href = \"/\";\r\n                        }}\r\n                        style={{\r\n                            width: \"60px\",\r\n                            height: \"60px\",\r\n                            borderRadius: \"50%\",\r\n                        }}>\r\n                        <FontAwesomeIcon icon={faArrowLeft} />\r\n                    </Button>\r\n                </div>\r\n                {!this.state.loaded ? (\r\n                    <ReactLoading\r\n                        type={\"spin\"}\r\n                        color={\"orange\"}\r\n                        height={\"100vh\"}\r\n                        width={\"40%\"}\r\n                        className='loading'\r\n                    />\r\n                ) : (\r\n                    <Card id='blog' className='p-2 col-12 singleBlog'>\r\n                        <CardImg\r\n                            top\r\n                            width='100%'\r\n                            src={\"..\" + this.state.imageURL}\r\n                            alt='Card image cap'\r\n                            className='img-fluid'\r\n                        />\r\n                        <CardBody>\r\n                            <CardTitle className='text-primary'>\r\n                                <h5>\r\n                                    {this.state.title}\r\n                                    <span className='float-right text-secondary'>\r\n                                        {\"-\"}\r\n                                        <em>@{this.state.author.username}</em>\r\n                                    </span>\r\n                                </h5>\r\n                            </CardTitle>\r\n                            {this.state.date !== \"\" && (\r\n                                <CardSubtitle className='text-dark'>\r\n                                    <FontAwesomeIcon\r\n                                        icon={faCalendar}\r\n                                        className='mr-2'\r\n                                    />\r\n                                    {new Intl.DateTimeFormat(\"en-US\", {\r\n                                        month: \"long\",\r\n                                        day: \"numeric\",\r\n                                        year: \"numeric\",\r\n                                        hour: \"numeric\",\r\n                                        minute: \"numeric\",\r\n                                    }).format(Date.parse(this.state.date))}\r\n                                    <span className='float-right'>\r\n                                        <FontAwesomeIcon\r\n                                            className='text-danger'\r\n                                            icon={faHeart}\r\n                                        />{\" \"}\r\n                                        {this.state.likes.length}\r\n                                    </span>\r\n                                </CardSubtitle>\r\n                            )}\r\n                            <CardText>\r\n                                <br />\r\n                                {this.state.body}\r\n                            </CardText>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            {this.props.user !== null &&\r\n                                this.props.user._id ===\r\n                                    this.state.author.id && (\r\n                                    <div\r\n                                        style={{ display: \"flex\" }}\r\n                                        className='p-1'>\r\n                                        <Button\r\n                                            className='btn btn-danger mr-1'\r\n                                            style={{ width: \"48%\" }}\r\n                                            onClick={this.deleteBlog}>\r\n                                            Delete\r\n                                        </Button>{\" \"}\r\n                                        <Button\r\n                                            className='btn btn-warning ml-1'\r\n                                            style={{ width: \"48%\" }}\r\n                                            onClick={this.toggleModal}>\r\n                                            Edit\r\n                                        </Button>\r\n                                    </div>\r\n                                )}\r\n                        </CardFooter>\r\n                    </Card>\r\n                )}\r\n                <Modal\r\n                    isOpen={this.state.isModalOpen}\r\n                    fade={false}\r\n                    toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Add a blog\r\n                    </ModalHeader>\r\n                    <Form onSubmit={this.onSubmit}>\r\n                        <ModalBody>\r\n                            <FormGroup>\r\n                                <Label htmlFor='title'>title</Label>\r\n                                <Input\r\n                                    type='text'\r\n                                    id='title'\r\n                                    onChange={this.ontitleChange}\r\n                                    value={this.state.title}\r\n                                    name='title'\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor='imageURL'>imageURL</Label>\r\n                                <Input \r\n                                    type=\"file\" \r\n                                    id='imageURL' \r\n                                    name='imageURL'\r\n                                    onChange={this.onFileChange}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor='body'>body</Label>\r\n                                <Input\r\n                                    type='textarea'\r\n                                    id='body'\r\n                                    onChange={this.onbodyChange}\r\n                                    value={this.state.body}\r\n                                    name='body'\r\n                                />\r\n                            </FormGroup>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button\r\n                                type='submit'\r\n                                value='submit'\r\n                                color='primary'>\r\n                                UPDATE BLOG\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Card,\r\n    CardImg,\r\n    CardBody,\r\n    CardSubtitle,\r\n    CardTitle,\r\n    CardImgOverlay,\r\n    CardText,\r\n    Button,\r\n    CardFooter,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n} from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCalendar, faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactLoading from \"react-loading\";\r\nclass Blog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            liked: false,\r\n            likes: this.props.blog.likes.length,\r\n        };\r\n        this.toggleLike = this.toggleLike.bind(this);\r\n    }\r\n    toggleLike() {\r\n        !this.state.liked\r\n            ? axios\r\n                  .put(`/api/blogs/${this.props.blog._id}/like`)\r\n                  .then((res) => {\r\n                      this.setState({\r\n                          liked: true,\r\n                          likes: res.data.likes.length,\r\n                      });\r\n                  })\r\n                  .catch((err) => console.log(err.response))\r\n            : axios\r\n                  .put(`/api/blogs/${this.props.blog._id}/unlike`)\r\n                  .then((res) => {\r\n                      this.setState({\r\n                          liked: false,\r\n                          likes: res.data.likes.length,\r\n                      });\r\n                  })\r\n                  .catch((err) => console.log(err.response));\r\n    }\r\n    componentDidMount() {\r\n        try {\r\n            for (let user of this.props.blog.likes)\r\n                if (user.id === this.props.user._id) {\r\n                    this.setState({\r\n                        liked: true,\r\n                    });\r\n                    break;\r\n                }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const blog = this.props.blog;\r\n\r\n        return (\r\n            <div\r\n                className='col-12 col-md-6 col-lg-4 col-xl-3 mb-5'\r\n                key={blog._id}>\r\n                <Card className='p-1 m-1 h-100' id='cards'> \r\n                    <Card>\r\n                        <CardImg\r\n                            top\r\n                            width='100%'\r\n                            src={blog.image}\r\n                            alt='Card image cap'\r\n                            className='img-fluid'\r\n                        />\r\n                        <CardImgOverlay>\r\n                            <h3>\r\n                                <FontAwesomeIcon\r\n                                    className='text-danger'\r\n                                    icon={faHeart}\r\n                                />{\" \"}\r\n                                {this.state.likes}\r\n                            </h3>\r\n                        </CardImgOverlay>\r\n                    </Card>\r\n\r\n                    <CardBody className='d-flex flex-column'>\r\n                        <CardTitle className='text-primary'>\r\n                            <h5>\r\n                                {blog.title}\r\n                                {this.state.liked ? (\r\n                                    <span\r\n                                        className='float-right '\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        onClick={this.toggleLike}>\r\n                                        <FontAwesomeIcon\r\n                                            icon={faHeart}\r\n                                            className='text-danger'\r\n                                        />\r\n                                    </span>\r\n                                ) : (\r\n                                    <span\r\n                                        className='float-right '\r\n                                        onClick={this.toggleLike}>\r\n                                        <FontAwesomeIcon\r\n                                            style={{\r\n                                                color: \"rgba(0,0,0,0.2)\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                            icon={faHeart}\r\n                                            className=''\r\n                                        />\r\n                                    </span>\r\n                                )}\r\n                            </h5>\r\n                        </CardTitle>\r\n                        <CardSubtitle>\r\n                            {\"-\"}\r\n                            <em>@{blog.author.username}</em>\r\n                        </CardSubtitle>\r\n                        <br />\r\n                        <CardText className=''>\r\n                            {blog.body.substring(0, 70)}\r\n                            {\" ...\"}\r\n                        </CardText>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/blog/${blog._id}`,\r\n                                blog: { blog },\r\n                            }}\r\n                            className='text-decoration-none mt-auto'>\r\n                            <Button className='btn btn-sm' color='success'>\r\n                                Read More\r\n                            </Button>\r\n                        </Link>\r\n                    </CardBody>\r\n                    {blog.date && (\r\n                        <CardFooter className='small '>\r\n                            <FontAwesomeIcon\r\n                                icon={faCalendar}\r\n                                className='mr-2'\r\n                            />\r\n                            {new Intl.DateTimeFormat(\"en-US\", {\r\n                                month: \"long\",\r\n                                day: \"numeric\",\r\n                                year: \"numeric\",\r\n                                hour: \"numeric\",\r\n                                minute: \"numeric\",\r\n                            }).format(Date.parse(blog.date))}\r\n                            {/* {blog.date} */}\r\n                        </CardFooter>\r\n                    )}\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst Blogs = ({ blogs, user, setUser }) => {\r\n    return blogs.map((blog) => {\r\n        return (\r\n            <Blog key={blog._id} blog={blog} user={user} setUser={setUser} />\r\n        );\r\n    });\r\n};\r\nexport default class blogList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            blogs: null,\r\n            isModalOpen: false,\r\n            title: \"\",\r\n            body: \"\",\r\n            imageURL: \"\",\r\n            user: null,\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.onbodyChange = this.onbodyChange.bind(this);\r\n        this.ontitleChange = this.ontitleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onFileChange = this.onFileChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        axios\r\n            .get(\"api/users/current\")\r\n            .then((res) => {\r\n                this.setState({\r\n                    user: res.data.user,\r\n                });\r\n                // console.log(this.state.user)\r\n                axios\r\n                    .get(\"/api/blogs\")\r\n                    .then(({ data: { blogs } }) => {\r\n                        blogs.sort((a, b) =>\r\n                            a.likes.length < b.likes.length\r\n                                ? 1\r\n                                : b.likes.length < a.likes.length\r\n                                ? -1\r\n                                : 0,\r\n                        );\r\n                        this.setState({ blogs: blogs });\r\n                    })\r\n                    .catch((err) => {\r\n                        // console.log(err.respons\r\n                        if (err.response.data.err === \"Not Logged in\")\r\n                            window.location = \"/login\";\r\n                    });\r\n            })\r\n            .catch((err) => console.log(err.response.data));\r\n    }\r\n    ontitleChange(e) {\r\n        this.setState({\r\n            title: e.target.value,\r\n        });\r\n    }\r\n    onbodyChange(e) {\r\n        this.setState({\r\n            body: e.target.value,\r\n        });\r\n    }\r\n    onFileChange(e){\r\n        this.setState({\r\n            imageURL:e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        const imageFile = this.state.imageURL;\r\n \r\n        if (!imageFile) {\r\n            alert('Please select image.');\r\n            return false;\r\n        }\r\n    \r\n        if (!imageFile.match(/\\.(jpg|jpeg|png)$/)) {\r\n            alert('Please select valid image.');\r\n            return false;\r\n        }\r\n\r\n        const title = this.state.title;\r\n        if(title.length == 0){\r\n            alert(\"Please input title\");\r\n            return false;\r\n        }\r\n\r\n        const body = this.state.body;\r\n        if(body.length == 0){\r\n            alert(\"Plaese input Body\");\r\n            return false;\r\n        }\r\n\r\n        const formData = new FormData(e.target);\r\n\r\n        axios\r\n            .post(\"/api/blogs\", formData)\r\n            .then(({ data: { blog } }) => {\r\n                this.setState({\r\n                    blogs: [blog, ...this.state.blogs],\r\n                });\r\n            })\r\n            .catch((err) => console.log(err.response));\r\n\r\n        this.toggleModal();\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=''>\r\n                <Button\r\n                    color='danger'\r\n                    onClick={this.toggleModal}\r\n                    style={{\r\n                        marginLeft: \"25vw\",\r\n                        marginTop: \"2vh\",\r\n                        width: \"50vw\",\r\n                    }}>\r\n                    Add a BLOG\r\n                </Button>\r\n                <div\r\n                    className='row pt-4 justify-content-center '\r\n                    style={{\r\n                        marginLeft: \"5vw\",\r\n                        width: \"90vw\",\r\n                    }}>\r\n                    {this.state.blogs ? (   \r\n                        <Blogs\r\n                            blogs={this.state.blogs}\r\n                            user={this.state.user}\r\n                            liked={this.state.like}\r\n                            toggleLike={this.toggleLike}\r\n                            setUser={this.props.setUser}\r\n                        />\r\n                    ) : (\r\n                        <ReactLoading\r\n                            type={\"spin\"}\r\n                            color={\"orange\"}\r\n                            height={\"100vh\"}\r\n                            width={\"40%\"}\r\n                            className='loading'\r\n                        />\r\n                    )}\r\n\r\n                    <Modal\r\n                        isOpen={this.state.isModalOpen}\r\n                        fade={false}\r\n                        toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}>\r\n                            Add a blog\r\n                        </ModalHeader>\r\n                        <Form onSubmit={this.onSubmit}>\r\n                            <ModalBody>\r\n                                <FormGroup>\r\n                                    <Label htmlFor='title'>title</Label>\r\n                                    <Input\r\n                                        type='text'\r\n                                        id='title'\r\n                                        onChange={this.ontitleChange}\r\n                                        name='title'\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label htmlFor='imageURL'>imageURL</Label>\r\n                                    <Input \r\n                                        type=\"file\" \r\n                                        id='imageURL' \r\n                                        name='imageURL'\r\n                                        onChange={this.onFileChange}/>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label htmlFor='body'>body</Label>\r\n                                    <Input\r\n                                        type='textarea'\r\n                                        id='body'\r\n                                        onChange={this.onbodyChange}\r\n                                        name='body'\r\n                                    />\r\n                                </FormGroup>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button\r\n                                    type='submit'\r\n                                    value='submit'\r\n                                    color='primary'>\r\n                                    Add BLOG\r\n                                </Button>\r\n                            </ModalFooter>\r\n                        </Form>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Card,\r\n    CardImg,\r\n    CardBody,\r\n    CardSubtitle,\r\n    CardTitle,\r\n    CardImgOverlay,\r\n    CardText,\r\n    Button,\r\n    CardFooter,\r\n} from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faCalendar,\r\n    faHeart,\r\n    faUserCircle,\r\n    faArrowLeft,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Blog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { likes: this.props.blog.likes, isOpen: false };\r\n        this.showLikes = this.showLikes.bind(this);\r\n    }\r\n    showLikes() {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    }\r\n    render() {\r\n        const blog = this.props.blog;\r\n        return (\r\n            <div\r\n                className='col-12 col-md-6 col-lg-4 col-xl-3 mb-5'\r\n                key={blog._id}>\r\n                <Card className='p-1 m-1' id='cards'>\r\n                    <Card>\r\n                        <CardImg\r\n                            top\r\n                            width='100%'\r\n                            src={blog.image}\r\n                            alt='Card image cap'\r\n                            className='img-fluid'\r\n                        />\r\n                        <CardImgOverlay>\r\n                            <h3>\r\n                                <FontAwesomeIcon\r\n                                    className='text-danger'\r\n                                    icon={faHeart}\r\n                                />{\" \"}\r\n                                {blog.likes.length}\r\n                            </h3>\r\n                        </CardImgOverlay>\r\n                    </Card>\r\n\r\n                    <CardBody>\r\n                        <CardTitle className='text-primary'>\r\n                            <h5>\r\n                                {blog.title}\r\n                                {this.state.liked ? (\r\n                                    <span\r\n                                        className='float-right '\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        onClick={this.toggleLike}\r\n                                    />\r\n                                ) : (\r\n                                    <span\r\n                                        className='float-right '\r\n                                        onClick={this.toggleLike}>\r\n                                        {/* <FontAwesomeIcon\r\n                                            style={{\r\n                                                color: \"rgba(0,0,0,0.2)\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                            icon={faHeart}\r\n                                            className=''\r\n                                        /> */}\r\n                                    </span>\r\n                                )}\r\n                            </h5>\r\n                        </CardTitle>\r\n                        <CardSubtitle>\r\n                            {\"-\"}\r\n                            <em>@{blog.author.username}</em>\r\n                        </CardSubtitle>\r\n                        <br />\r\n                        <CardText className=''>\r\n                            {blog.body.substring(0, 50)}\r\n                            {\" ...\"}\r\n                        </CardText>\r\n                        <div className='row justify-content-center'>\r\n                            <Button\r\n                                className='btn btn-sm col-5 mr-1'\r\n                                color='success'>\r\n                                <Link\r\n                                    to={{\r\n                                        pathname: `/blog/${blog._id}`,\r\n                                        blog: { blog },\r\n                                    }}\r\n                                    className='text-decoration-none text-white'>\r\n                                    Read More\r\n                                </Link>\r\n                            </Button>\r\n                            <Button\r\n                                className='col-5 btn btn-sm ml-1'\r\n                                color='danger'\r\n                                onClick={this.showLikes}>\r\n                                Likes\r\n                            </Button>\r\n                        </div>\r\n                    </CardBody>\r\n                    {blog.date && (\r\n                        <CardFooter className='small '>\r\n                            <FontAwesomeIcon\r\n                                icon={faCalendar}\r\n                                className='mr-2'\r\n                            />\r\n                            {new Intl.DateTimeFormat(\"en-US\", {\r\n                                month: \"long\",\r\n                                day: \"numeric\",\r\n                                year: \"numeric\",\r\n                                hour: \"numeric\",\r\n                                minute: \"numeric\",\r\n                            }).format(Date.parse(blog.date))}\r\n                            {/* {blog.date} */}\r\n                            {this.state.isOpen && (\r\n                                <div className='likes m-3'>\r\n                                    <h6>\r\n                                        <FontAwesomeIcon\r\n                                            className='text-danger'\r\n                                            icon={faHeart}\r\n                                        />{\" \"}\r\n                                        {this.state.likes.length} Likes\r\n                                    </h6>\r\n                                    <ul className='list-group list-group-flush'>\r\n                                        {this.state.likes.map((user) => (\r\n                                            <li className='list-group-item py-2 pl-0'>\r\n                                                <FontAwesomeIcon\r\n                                                    icon={faUserCircle}\r\n                                                    // className='text-danger'\r\n                                                />\r\n                                                {\"  \"}\r\n                                                {user.username}\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                            )}\r\n                        </CardFooter>\r\n                    )}\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst Blogs = ({ blogs }) => {\r\n    return blogs.map((blog) => {\r\n        return <Blog key={blog._id} blog={blog} />;\r\n    });\r\n};\r\nexport default class Myblogs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            blogs: null,\r\n            likes: 0,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        axios\r\n            .get(\"/api/blogs/my\")\r\n            .then(({ data: { blogs } }) => {\r\n                let a = 0;\r\n                blogs.forEach((blog) => {\r\n                    a += blog.likes.length;\r\n                });\r\n                this.setState({ blogs: blogs, likes: a });\r\n            })\r\n            .catch((err) => console.log(err.response));\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='row mr-auto ml-3 mb-1 mt-1'>\r\n                    <Button\r\n                        color='primary'\r\n                        size='lg'\r\n                        onClick={() => {\r\n                            window.location.href = \"/\";\r\n                        }}\r\n                        style={{\r\n                            width: \"60px\",\r\n                            height: \"60px\",\r\n                            borderRadius: \"50%\",\r\n                        }}>\r\n                        <FontAwesomeIcon icon={faArrowLeft} />\r\n                    </Button>\r\n                </div>\r\n                <div\r\n                    className='row pt-4 justify-content-center'\r\n                    style={{\r\n                        marginLeft: \"5vw\",\r\n                        width: \"90vw\",\r\n                    }}>\r\n                    {this.state.blogs ? (\r\n                        <Blogs blogs={this.state.blogs} />\r\n                    ) : (\r\n                        <div className='btn btn-lg btn-danger'>\r\n                            404 : No Blogs Found\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n    Label,\r\n    Form,\r\n    Button,\r\n    FormGroup,\r\n    Input,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    Alert,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nexport default class login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.toggleError = this.toggleError.bind(this);\r\n        this.addUser = this.addUser.bind(this);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            email: \"\",\r\n            alert: false,\r\n            isModalOpen: false,\r\n            errMessage: \"\",\r\n            alertCol: \"danger\",\r\n        };\r\n    }\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value,\r\n        });\r\n    }\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value,\r\n        });\r\n    }\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value,\r\n        });\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n        });\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const user = {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n        };\r\n        // console.log(this.props)x\r\n        axios\r\n            .post(\"/api/users/login\", user)\r\n            .then((res) => {\r\n                this.props.updateUser(res.data.user).then(() => {\r\n                    window.location = \"/\";\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n                let errMess = \"\";\r\n                errMess = err?.response?.data?.err?.name;\r\n                if (errMess === undefined) errMess = \"Something went wrong\";\r\n                else if (errMess === \"IncorrectUsernameError\")\r\n                    errMess = \"Incorrect Username\";\r\n                else if (errMess === \"IncorrectPasswordError\")\r\n                    errMess = \"Incorrect Password\";\r\n                this.setState({\r\n                    alert: true,\r\n                    alertCol: \"danger\",\r\n                    errMessage: errMess,\r\n                });\r\n            });\r\n    }\r\n    addUser(e) {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            email: this.state.email,\r\n        };\r\n        axios\r\n            .post(\"/api/users/\", newUser)\r\n            .then(({ data }) => {\r\n                console.log(data);\r\n                this.props.updateUser(data.user).then(() => {\r\n                    window.location = \"/\";\r\n                });\r\n                this.setState({\r\n                    alert: false,\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                let errMess = \"\";\r\n                errMess = err?.response?.data?.err?.name;\r\n                if (errMess === undefined) errMess = \"Something went wrong\";\r\n                else if (errMess === \"UserExistsError\")\r\n                    errMess = \"User Already Exists\";\r\n                else if (errMess === \"IncorrectPasswordError\")\r\n                    errMess = \"Incorrect Password\";\r\n                this.setState({\r\n                    alert: true,\r\n                    alertCol: \"danger\",\r\n                    errMessage: errMess,\r\n                });\r\n                this.setState({\r\n                    alert: true,\r\n                    errMessage: errMess,\r\n                    alertCol: \"danger\",\r\n                });\r\n                console.log(err.response);\r\n            });\r\n        this.toggleModal();\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.user) window.location = \"/\";\r\n    }\r\n    toggleError() {\r\n        this.setState({\r\n            alert: !this.state.alert,\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='p-3 mt-1'>\r\n                    <Alert\r\n                        color={this.state.alertCol}\r\n                        fade={true}\r\n                        toggle={this.toggleError}\r\n                        isOpen={this.state.alert}>\r\n                        {this.state.errMessage}\r\n                    </Alert>\r\n                </div>\r\n\r\n                <div id='form' className='p-4 my-4'>\r\n                    <h1 style={{ fontFamily: \"Kaushan Script\" }}>Login</h1>\r\n                    <Form onSubmit={this.onSubmit}>\r\n                        <div className='form-group'>\r\n                            <Label>Username : </Label>\r\n                            <input\r\n                                type='text'\r\n                                required\r\n                                className='form-control'\r\n                                value={this.state.username}\r\n                                onChange={this.onChangeUsername}\r\n                            />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <Label>Password : </Label>\r\n                            <input\r\n                                type='password'\r\n                                required\r\n                                className='form-control'\r\n                                value={this.state.password}\r\n                                onChange={this.onChangePassword}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div className='form-group'>\r\n                            <input\r\n                                type='submit'\r\n                                value='Login'\r\n                                className='btn btn-primary'\r\n                            />\r\n                            {\"     \"}\r\n                            New to{\" \"}\r\n                            <span\r\n                                style={{\r\n                                    fontFamily: \"Monoton\",\r\n                                }}>\r\n                                BlogApp ?\r\n                            </span>{\" \"}\r\n                            <Button\r\n                                className='btn btn-sm'\r\n                                color='success'\r\n                                onClick={this.toggleModal}>\r\n                                Sign Up\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                <Modal\r\n                    isOpen={this.state.isModalOpen}\r\n                    fade={false}\r\n                    toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        <h1 style={{ fontFamily: \"Kaushan Script\" }}>SignUp</h1>\r\n                    </ModalHeader>\r\n                    <Form onSubmit={this.addUser}>\r\n                        <ModalBody>\r\n                            <FormGroup>\r\n                                <Label htmlFor='username'>Username</Label>\r\n                                <Input\r\n                                    type='text'\r\n                                    id='username'\r\n                                    onChange={this.onChangeUsername}\r\n                                    name='username'\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor='email'>Email</Label>\r\n                                <Input\r\n                                    type='text'\r\n                                    id='email'\r\n                                    onChange={this.onChangeEmail}\r\n                                    name='email'\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor='password'>Password</Label>\r\n                                <Input\r\n                                    type='password'\r\n                                    id='password'\r\n                                    onChange={this.onChangePassword}\r\n                                    name='password'\r\n                                />\r\n                            </FormGroup>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button\r\n                                type='submit'\r\n                                value='submit'\r\n                                color='primary'>\r\n                                Sign Up\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component, createRef } from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport NavbarComponent from './compenents/navbar.component';\r\nimport Blog from './compenents/blog.component';\r\nimport BlogList from './compenents/blogList.component';\r\nimport Myblogs from './compenents/myBlog.component';\r\n\r\nimport Login from './compenents/login.component';\r\nimport axios from 'axios';\r\nexport default class App extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.updateUser = this.updateUser.bind(this);\r\n\t\tthis.setUser = this.setUser.bind(this);\r\n\t\tthis.state = {\r\n\t\t\tuser : null\r\n\t\t};\r\n\t}\r\n\twrapper = createRef();\r\n\tcomponentDidMount () {\r\n\t\tconst node=this.wrapper.current;\r\n\t\tconsole.log(node)\r\n\t\taxios\r\n\t\t\t.get('api/users/current')\r\n\t\t\t.then((res) =>\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tuser : res.data.user\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.catch((err) => console.log(err.response));\r\n\t}\r\n\tasync setUser () {\r\n\t\taxios\r\n\t\t\t.get('api/users/current')\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tuser : res.data.user\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(this.state.user);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err.response.data));\r\n\t}\r\n\tasync updateUser (user) {\r\n\t\tthis.setState({\r\n\t\t\tuser : user\r\n\t\t});\r\n\t\tconsole.log(this.state.user);\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<NavbarComponent user={this.state.user} updateUser={this.updateUser} />\r\n\t\t\t\t<Route\r\n\t\t\t\t\tpath='/'\r\n\t\t\t\t\texact\r\n\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t<BlogList\r\n\t\t\t\t\t\t\t{...props}\r\n\t\t\t\t\t\t\tuser={this.state.user}\r\n\t\t\t\t\t\t\tupdateUser={this.updateUser}\r\n\t\t\t\t\t\t\tsetUser={this.setUser}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route\r\n\t\t\t\t\tpath='/blog/:id'\r\n\t\t\t\t\texact\r\n\t\t\t\t\trender={(props) => <Blog {...props} user={this.state.user} updateUser={this.updateUser} />}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* <Route\r\n\t\t\t\t\tpath='/blog/edit/:id'\r\n\t\t\t\t\texact\r\n\t\t\t\t\tcomponent={() => <BlogEdit user={this.state.user} updateUser={this.updateUser} />}\r\n\t\t\t\t/> */}\r\n\t\t\t\t<Route\r\n\t\t\t\t\tpath='/myblogs/'\r\n\t\t\t\t\texact\r\n\t\t\t\t\tcomponent={() => <Myblogs user={this.state.user} updateUser={this.updateUser} />}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route\r\n\t\t\t\t\tpath='/login'\r\n\t\t\t\t\texact\r\n\t\t\t\t\t// component={() => (\r\n\t\t\t\t\t//     <Login\r\n\t\t\t\t\t//         user={this.state.user}\r\n\t\t\t\t\t//         updateUser={this.updateUser}\r\n\t\t\t\t\t//     />\r\n\t\t\t\t\t// )}\r\n\t\t\t\t\trender={(props) => <Login {...props} user={this.state.user} updateUser={this.updateUser} />}\r\n\t\t\t\t/>\r\n\t\t\t</BrowserRouter>\r\n\t\t);\r\n\t}\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<React.Fragment>\r\n\t\t<App />\r\n\t</React.Fragment>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can chang\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/blog.6641d2b3.png\";"],"sourceRoot":""}